// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  firstname String
  lastname  String
  email     String    @unique
  password  String
  xp        Int       @default(0)
  level     Int       @default(1)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  habits             UserHabit[]
  habitLogs          HabitLog[]
  unlockedAchievements UserToAchievement[]
}

model Frequency {
  id    Int    @id @default(autoincrement())
  label String @unique

  habits Habit[]
}

model Habit {
  id          Int         @id @default(autoincrement())
  title       String
  description String
  frequencyId Int
  xpReward    Int         @default(10)
  createdAt   DateTime    @default(now())

  frequency Frequency     @relation(fields: [frequencyId], references: [id])
  users     UserHabit[]
  logs      HabitLog[]
}

model UserHabit {
  id        Int      @id @default(autoincrement())
  userId    Int
  habitId   Int
  isActive  Boolean  @default(true)
  streak    Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user  User  @relation(fields: [userId], references: [id])
  habit Habit @relation(fields: [habitId], references: [id])

  @@unique([userId, habitId])
}

model HabitLog {
  id          Int      @id @default(autoincrement())
  userId      Int
  habitId     Int
  completedAt DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id])
  habit Habit @relation(fields: [habitId], references: [id])
}

model Achievement {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  xpReward    Int      @default(50)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  unlockedBy UserToAchievement[]
}

model UserToAchievement {
  id             Int      @id @default(autoincrement())
  userId         Int
  achievementId  Int
  unlocked       Boolean  @default(false)
  unlockedAt     DateTime?

  user        User        @relation(fields: [userId], references: [id])
  achievement Achievement @relation(fields: [achievementId], references: [id])

  @@unique([userId, achievementId])
}